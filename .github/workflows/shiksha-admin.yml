name: Shiksha Admin Deployment

on:
  push:
    branches:
      - main

jobs:
  XYZ-DEV-DEPLOYMENT:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Install SonarQube Scanner
        run: |
           Invoke-WebRequest -Uri "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.1.0.4477-windows-x64.zip" -OutFile "sonar-scanner-cli-6.1.0.4477-windows-x64.zip"
           Expand-Archive -Path "sonar-scanner-cli-6.1.0.4477-windows-x64.zip" -DestinationPath "sonar-scanner"

      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=shiksha-admin \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}\
            -Dsonar.exclusions=**/*.jar,**/*.zip,**/*.vsix,**/*.dll,**/*.exe,C:/Users/ishan/Application\ Data/** \
            -Dsonar.scanner.largeFiles=30MB

      - name: Deploy Application
        run: |
          cd ${{ secrets.LOCAL_TARGET_DIR }}
          if [ -f .env ]; then
            rm .env
          fi
          echo "${{ secrets.LOCAL_ENV }}" > .env
          ls -ltra
          ./deploy.sh
